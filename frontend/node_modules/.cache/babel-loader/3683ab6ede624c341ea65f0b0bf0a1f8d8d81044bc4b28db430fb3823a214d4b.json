{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst user = JSON.parse(localStorage.getItem('token'));\nconst API = axios.create({\n  baseURL: `${process.env.REACT_APP_BASE_API_URL}/profile`\n});\nAPI.interceptors.request.use(request => {\n  if (user) {\n    request.headers.Authorization = `Bearer ${user}`;\n  }\n  return request;\n});\nexport const GetProfilePosts = createAsyncThunk('profile/get-posts', async _ref => {\n  let {\n    userid\n  } = _ref;\n  try {\n    const {\n      data\n    } = await API.get(`/${userid}`);\n    if (data) {\n      return data;\n    }\n  } catch (err) {\n    return null;\n  }\n});\nconst ProfileSlice = createSlice({\n  name: 'profile',\n  initialState: {\n    posts: [],\n    loading: false\n  },\n  extraReducers: builder => {},\n  reducers: {}\n});\nexport default ProfileSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","user","JSON","parse","localStorage","getItem","API","create","baseURL","process","env","REACT_APP_BASE_API_URL","interceptors","request","use","headers","Authorization","GetProfilePosts","userid","data","get","err","ProfileSlice","name","initialState","posts","loading","extraReducers","builder","reducers","reducer"],"sources":["D:/programmer/project-pl/inspobox/frontend/src/slices/ProfileSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\nconst user = JSON.parse(localStorage.getItem('token'));\r\n\r\nconst API = axios.create({\r\n    baseURL:`${process.env.REACT_APP_BASE_API_URL}/profile`\r\n});\r\n\r\nAPI.interceptors.request.use((request) => {\r\n    if(user){\r\n        request.headers.Authorization = `Bearer ${user}`;\r\n    }\r\n\r\n    return request;\r\n});\r\n\r\nexport const GetProfilePosts = createAsyncThunk('profile/get-posts', async ({ userid }) => {\r\n  try {\r\n    const { data } = await API.get(`/${userid}`);\r\n    if(data) {\r\n        return data;\r\n    }\r\n\r\n  } catch(err) {\r\n     return null;\r\n  }\r\n});\r\n\r\nconst ProfileSlice = createSlice({\r\n    name:'profile',\r\n    initialState:{\r\n        posts:[],\r\n        loading:false\r\n    },\r\n    extraReducers:(builder) => {},\r\n    reducers:{}\r\n});\r\n\r\nexport default ProfileSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AAEtD,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACrBC,OAAO,EAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB;AAClD,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAED,OAAO,IAAK;EACtC,IAAGZ,IAAI,EAAC;IACJY,OAAO,CAACE,OAAO,CAACC,aAAa,GAAI,UAASf,IAAK,EAAC;EACpD;EAEA,OAAOY,OAAO;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMI,eAAe,GAAGlB,gBAAgB,CAAC,mBAAmB,EAAE,cAAsB;EAAA,IAAf;IAAEmB;EAAO,CAAC;EACpF,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAE,IAAGF,MAAO,EAAC,CAAC;IAC5C,IAAGC,IAAI,EAAE;MACL,OAAOA,IAAI;IACf;EAEF,CAAC,CAAC,OAAME,GAAG,EAAE;IACV,OAAO,IAAI;EACd;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGxB,WAAW,CAAC;EAC7ByB,IAAI,EAAC,SAAS;EACdC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC;EACZ,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAK,CAAC,CAAC;EAC7BC,QAAQ,EAAC,CAAC;AACd,CAAC,CAAC;AAEF,eAAeP,YAAY,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}