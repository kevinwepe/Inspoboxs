{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API = axios.create({\n  baseURL: `${process.env.REACT_APP_BASE_API_URL}/auth`\n});\nconst initialState = {\n  token: null,\n  user: null\n};\nexport const loginHandler = createAsyncThunk('auth/login', async _ref => {\n  let {\n    loginForm\n  } = _ref;\n  try {\n    const {\n      data\n    } = await API.post('/login', loginForm);\n    if (data) {\n      return data;\n    }\n  } catch (err) {\n    return null;\n  }\n});\nexport const registerHandler = createAsyncThunk('auth/register', async _ref2 => {\n  let {\n    registerForm\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await API.post('/login', loginForm);\n    if (data) {\n      return data;\n    }\n  } catch (err) {\n    return null;\n  }\n});\nconst AuthSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {}\n});\nexport default AuthSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","API","create","baseURL","process","env","REACT_APP_BASE_API_URL","initialState","token","user","loginHandler","loginForm","data","post","err","registerHandler","registerForm","AuthSlice","name","reducers","extraReducers","builder","reducer"],"sources":["D:/programmer/project-pl/inspobox/frontend/src/slices/AuthSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n   baseURL:`${process.env.REACT_APP_BASE_API_URL}/auth`\r\n});\r\n\r\nconst initialState = {\r\n    token:null,\r\n    user:null, \r\n}\r\n\r\nexport const loginHandler = createAsyncThunk('auth/login' , async ({ loginForm }) => {\r\n    try {\r\n\r\n        const { data } = await API.post('/login' , loginForm);\r\n        if(data) {\r\n            return data;\r\n        }\r\n\r\n    } catch(err) {\r\n        return null;\r\n    }\r\n});\r\n\r\nexport const registerHandler = createAsyncThunk('auth/register' , async ({ registerForm }) => {\r\n     try {\r\n\r\n        \r\n        const { data } = await API.post('/login' , loginForm);\r\n        if(data) {\r\n            return data;\r\n        }\r\n\r\n     }catch(err) {\r\n        return null;\r\n     }\r\n});\r\n\r\nconst AuthSlice = createSlice({\r\n    name:'auth', \r\n    initialState,\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers:(builder)=> {\r\n\r\n    }\r\n});\r\n\r\nexport default AuthSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACtBC,OAAO,EAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB;AACjD,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC,IAAI;EACVC,IAAI,EAAC;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGZ,gBAAgB,CAAC,YAAY,EAAG,cAAyB;EAAA,IAAlB;IAAEa;EAAU,CAAC;EAC5E,IAAI;IAEA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAGF,SAAS,CAAC;IACrD,IAAGC,IAAI,EAAE;MACL,OAAOA,IAAI;IACf;EAEJ,CAAC,CAAC,OAAME,GAAG,EAAE;IACT,OAAO,IAAI;EACf;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGjB,gBAAgB,CAAC,eAAe,EAAG,eAA4B;EAAA,IAArB;IAAEkB;EAAa,CAAC;EACpF,IAAI;IAGD,MAAM;MAAEJ;IAAK,CAAC,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAGF,SAAS,CAAC;IACrD,IAAGC,IAAI,EAAE;MACL,OAAOA,IAAI;IACf;EAEH,CAAC,QAAME,GAAG,EAAE;IACT,OAAO,IAAI;EACd;AACL,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAC,MAAM;EACXX,YAAY;EACZY,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAI,CAE1B;AACJ,CAAC,CAAC;AAEF,eAAeJ,SAAS,CAACK,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}